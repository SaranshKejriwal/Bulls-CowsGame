package f1rst;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Scanner;


public class BullsCows {
	/*This code implements the Bulls & Cows word game using 4 digit numbers.
	 * The user has to guess a 4 digit number randomly generated by the system.
	 */
	static int answer=0;
	static int guessesLeft=20;
	static boolean guessed=false;
	
	public static void help(){
		System.out.println("We've generated a 4-digit number without any zeroes or repeating digits.\n"+
				"You have to guess it within 20 attempts."+
			"For a guess:\nBulls=correct digit guessed in its correct place\nCows=correct digits guessed in an incorrect place\nEnter a 4 digit guess. Good Luck!");
		
	}
	
	public static void check(String input){
		if(input.equalsIgnoreCase("help")){
			help();
			return;
		}
		int guess=0;
		try{
			guess=Integer.parseInt(input);
		}catch(Exception e){
			System.out.println("Invalid Input: Integer expected. Try again");
			return;
		}
		
		int bulls=0,cows=0;
		
		if(guess<1000 || guess>9999){
			System.out.println("Invalid input: Enter a 4 digit integer only. Try Again");
			return;
		}
		if(guess==answer){
			guessed=true;
			System.out.println("Correct! Answer:"+guess);
			return;
		}
		//get digits of guess in order
		ArrayList<Integer>guessedDigits=new ArrayList<Integer>(Arrays.asList(guess/1000,(guess%1000)/100,(guess%100)/10,guess%10));
		
		//check if any digit is repeating
		HashSet<Integer> checkDuplicates = new HashSet<Integer>(guessedDigits);
		if(checkDuplicates.size() < guessedDigits.size()){//there are duplicates
			System.out.println("Repeating digits not allowed. Try Again");
			return;
		}
		//get digits of guess in order
		ArrayList<Integer>answerDigits=new ArrayList<Integer>(Arrays.asList(answer/1000,(answer%1000)/100,(answer%100)/10,answer%10));
		
		//get total number of bulls and cows
		for(int i=0;i<answerDigits.size();i++){
			if(answerDigits.contains(guessedDigits.get(i))){
				cows++;//bulls may be included in this increment as well
			}
		}
		//separate bulls and cows
		for(int i=0;i<answerDigits.size();i++){
			if(answerDigits.get(i)==guessedDigits.get(i)){
				bulls++;//increment bulls only if the index of the digits are same as well
				cows--;
			}
		}
		
		if(bulls<4){
			guessesLeft--;
		}
		System.out.println("Bulls:"+bulls+"  Cows:"+cows+"  Guesses left:"+guessesLeft);
		
		
	}
	
	public static void generateSecretNumber(){
		ArrayList<Integer>listOfDigits=new ArrayList<Integer>(Arrays.asList(1,2,3,4,5,6,7,8,9));//list of all digits except 0
		//get 4 digits randomly without repetition
		Collections.shuffle(listOfDigits);
		List<Integer>selectedDigits=listOfDigits.subList(0, 4);//return 1st 4 digits of a shuffled list of digits
		answer=selectedDigits.get(0)+10*selectedDigits.get(1)+100*selectedDigits.get(2)+1000*selectedDigits.get(3);
	}
	
	public static void startTheGame(){
		generateSecretNumber();
		System.out.println("**Bulls & Cows**");
		System.out.println("**Guess the number in 20 attempts. Type \"help\" for rules**");
		Scanner input = new Scanner(System.in);
		while(guessesLeft>0 && !guessed){
			 
			System.out.print(">>");
			String guess=input.next();
			check(guess);
		}
		if (guessesLeft==0 && !guessed){
			System.out.println("You lose. Answer:"+answer);
		}
		if (guessesLeft==0 || guessed){
			System.out.println("Play Again ? y/Y for yes >>");
			String resp=input.next();
			char userConf=resp.charAt(0);
			if(userConf=='y' || userConf=='Y'){
				guessed=false;
				guessesLeft=20;
				startTheGame();
				input.close();
			}else{
				System.out.println("Goodbye...");
				input.close();
				return;
			}
		}
		
	}

	public static void main(String[] args) {
		startTheGame();
	}

}
